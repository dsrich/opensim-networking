use {Vector3, Vector4, Quaternion, UnitQuaternion, Ip4Addr, Ip4Port, Uuid};
use std::io::Write;
use byteorder::{LittleEndian, BigEndian, WriteBytesExt};

pub enum WriteMessageError {
    IoError(::std::io::Error)
}

impl From<::std::io::Error> for WriteMessageError {
    fn from(e: ::std::io::Error) -> WriteMessageError {
        WriteMessageError::IoError(e)
    }
}

pub type WriteMessageResult = Result<(), WriteMessageError>;
pub trait Message {
    fn write_to<W: Write>(&self, buffer: &mut W) -> WriteMessageResult;
}

// Don't edit this file manually, it is generated by a script and might be overwritten in the
// future.

